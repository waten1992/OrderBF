题目来源：
本题来源于我对在上课时间买早餐的不方便提出的解决方案，原因如下：

	1-排队人太多(90%早上第一大节上课的人，都在8：00-8：20挤到食堂买早餐)
	2-处理的时间过长(要刷卡)
	3-走更远的路程(都要从宿舍楼走向食堂，食堂非必经之路)

于是我就想尝试着用互联网的力量把这些问题解决它，解决方案如下：

	1-去中心化，建立分布式节点(化解中心处理的压力，减少排长队)
	2-线上交易支付，线下递送(缩短处理的时间，不用刷卡)
	3-提前预定早餐(合理的配置资源，减少浪费)
本题目自拟，实现的方式采用B/S架构MVC模式，具体用Centos + php + mysql + nginx架构

原始资料：
http://www.codeigniter.com/
http://www.centos.org/
http://www.mysql.com/
http://nginx.org/
Computer Systems：A Programmer's Perspective(Edition 2) Randal E. Bryant / David R. O'Hallaron 

毕业设计要求：

1-能在linux平台运行,各项功能在负载之内完整顺畅的运行；
  比如：注册模块、订单模块、用户信息模块等等；
2-要进行单元测试和功能测试，并使用git版本控制，同步github；
3-要进行性能测试，在单核，1GB内存能处理的并发数；
	请求的细化：
						1-用户登录(20%)
						2-用户查看某一个特定的页面(50%)
						3-查看评论(5%)
						4-提交评论(5%)
						5-其他的请求(20%)
	服务质量的细化：
						1-对于读静态页面，必须在2S内返回；
						2-对于读动态态页面，必须在3S内返回；
						3-对于写入数据库，可以放宽至5S内
4-要进行ab压力测试的设计：
			1-沿着用户轴延长：
					原本设计是50个/S , 如果有 200个用户同一时间来访问，就增加到200个/S
			2-沿着时间轴延长
					如果峰值都在200个/S 持续1个小时，就模拟持续2个小时，看SERVER是否抵挡的了；

5-服务端采用Centos6.5 + php + mysql + nginx架构；
6-客户端采用Bootstrap 或者 Semantic 框架；
7-集成测试；
8-整理资料，完成论文；

进度安排、应完成的工作量

1-在windows 安装wamp包在熟悉PHP 的CodeIgniter 框架；(1-3周)
2-编写功能说明书(4-5周)
3-设计数据库(6周)
4-后台逻辑编写和单元测试(7-11周)
5-前端UI界面设计(12-14周)
6-集成测试和性能测试及ab压力测试(15-16周)
7-整理资料完成论文(16周)

主要参考文献:


